name: Docker tag image

on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: "gh-pages"
          fetch-depth: 1

      - name: Get release version
        id: version_number
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
          echo "::set-output name=RELEASE_VERSION::${GITHUB_REF:10}"
























      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Builder info
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          #key: ${{ runner.os }}-single-buildx-${{ hashFiles('**/Dockerfile') }}
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: 'boky'
          password: '${{ secrets.DOCKER_ACCESS_TOKEN }}'

      - name: Fix issue with building Alpine # See https://gitlab.alpinelinux.org/alpine/aports/-/issues/12406
        run: |
          update-binfmts --enable

      - name: Build and push Alpine
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            boky/postfix:${{ env.RELEASE_VERSION }}
            boky/postfix:${{ env.RELEASE_VERSION }}-alpine
          platforms: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le" # linux/s390x: "rsyslog (no such package)"
          cache-from: type=local,src=/tmp/.buildx-cache/alpine
          cache-to: type=local,dest=/tmp/.buildx-cache-new/alpine
          build-args: |
            BASE_IMAGE=alpine:latest

      - name: Build and push Ubuntu
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: boky/postfix:${{ env.RELEASE_VERSION }}-ubuntu
          # linux/arm/v7 build fails with
          # CMake Error at /usr/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake:26 (list):
          # list sub-command REMOVE_ITEM requires two or more arguments.
          platforms: "linux/amd64,linux/arm64,linux/ppc64le,linux/s390x"
          cache-from: type=local,src=/tmp/.buildx-cache/ubuntu
          cache-to: type=local,dest=/tmp/.buildx-cache-new/ubuntu
          build-args: |
            BASE_IMAGE=ubuntu:focal

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Copy `README.md` and `LICENCE` into the helm chart
        id: readme_and_licence
        shell: bash
        run: cp README.md LICENSE helm/mail/
      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      # TODO: Include the changelog in Chart.yml as annotations.artifacthub.io/changes
      # See more here: https://artifacthub.io/docs/topics/annotations/helm/#supported-annotations

      - name: Package helm chart
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm package --app-version $RELEASE_VERSION --version $RELEASE_VERSION --destination ./gh-pages helm/mail

      - name: Create helm chart index
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: cd gh-pages && rm -rf .git && helm repo index . --url https://bokysan.github.io/docker-postfix
      - name: Upload gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
          tag_name: gh-pages-${{ steps.version_number.outputs.RELEASE_VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
